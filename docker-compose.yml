version: "3.8"

services:

  #       _
  #   ___| |    _ _  ___  _
  #  / | '_ \ / _` | '/ _ \| '_ \
  # | (| | | | (_| | | | (_) | | | |
  #  \___|_| |_|\,_|_|  \___/|_| |_|

  charon:
    # Pegged charon version (update this for each release).
    image: obolnetwork/charon:latest
    environment:
      CHARON_BEACON_NODE_ENDPOINTS: http://95.216.10.237:5052
#      CHARON_BEACON_NODE_ENDPOINTS: http://lighthouse:5052
      CHARON_JAEGER_ADDRESS: jaeger:6831
      CHARON_VALIDATOR_API_ADDRESS: 0.0.0.0:3600
      CHARON_P2P_TCP_ADDRESS: 0.0.0.0:3610
      CHARON_MONITORING_ADDRESS: 0.0.0.0:3620
      CHARON_P2P_UDP_ADDRESS: 0.0.0.0:3630
      CHARON_P2P_BOOTNODES: "http://88.198.7.93:3640/enr"
      CHARON_P2P_BOOTNODE_RELAY: "true"
      CHARON_LOG_LEVEL: info
      CHARON_JAEGER_SERVICE: charon
      CHARON_P2P_EXTERNAL_HOSTNAME: charon
    ports:
      - 3600:3600/tcp # Validator API
      - 3610:3610/tcp # Libp2p
      - 3620:3620/tcp # Monitoring
      - 3630:3630/udp # Discv5
    networks: [dvnode]
    volumes:
      - .charon:/opt/charon/.charon
    restart: on-failure
    healthcheck:
      test: wget -qO- http://localhost:3620/readyz

  #  _       _
  # | |_ ___| | ___   _
  # | / _ \ |/ / | | |
  # | ||  /   <| |_| |
  #  \__\___|_|\_\\__,_|

  teku:
    image: consensys/teku:latest
    depends_on:
      - charon
    ports:
      - 8008:8008
    command: |
      validator-client
      --config-file "/opt/charon/teku/teku_config.yaml"
    networks: [dvnode]
    volumes:
      - ".charon/validator_keys:/opt/charon/validator_keys"
      - "./config:/opt/charon/teku"
    restart: on-failure

  #                        _ _             _
  #  _  ___   ___  _  (_) |_ ___  _ (_)_     _
  # | '_ ` _ \ / _ \| '_ \| | / _ \| '| | '_ \ / _` |
  # | | | | | | (_) | | | | | || (_) | |  | | | | | (_| |
  # |_| |_| |_|\___/|_| |_|_|\__\___/|_|  |_|_| |_|\, |
  #                                                |___/

  prometheus:
    image: prom/prometheus:latest
    user: ":"
    ports:
      - "9090:9090"
    networks: [dvnode]
    volumes:
      - ./prometheus/prometheus.yml:/etc/prometheus/prometheus.yml
      - ./data/prometheus:/prometheus

  grafana:
    image: grafana/grafana:latest
    user: ":"
    depends_on: [prometheus]
    ports:
      - "3000:3000"
    networks: [dvnode]
    volumes:
      - ./grafana/datasource.yml:/etc/grafana/provisioning/datasources/datasource.yml
      - ./grafana/dashboards.yml:/etc/grafana/provisioning/dashboards/datasource.yml
      - ./grafana/grafana.ini:/etc/grafana/grafana.ini:ro
      - ./grafana/dashboards:/etc/dashboards
      - ./data/grafana:/var/lib/grafana

  node-exporter:
    image: prom/node-exporter:latest
    ports:
      - "9100:9100"
    networks: [dvnode]

  jaeger:
    image: jaegertracing/all-in-one:latest
    ports:
      - "16686:16686"
    networks: [dvnode]

networks:
  dvnode:
